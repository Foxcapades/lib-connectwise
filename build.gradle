plugins { id "com.jfrog.bintray" version "1.7.1" }

def config = [
  group   : 'io.vulpine.lib',
  groupKey: 'Vulpine-IO',
  version : '0.0.5',
  name    : 'connectwise',
  repo    : 'lib-connectwise',
  jvm     : '1.8'
];

group config.group
version config.version

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = config.jvm
targetCompatibility = config.jvm

/*
 * BinTray Configuration
 */
bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['maven']
  pkg {
    repo = 'maven'
    name = config.name
    userOrg = 'vpx'
    licenses = ['Apache-2.0']
    vcsUrl = "https://github.com/${config.groupKey}/${config.name}"
    version {
      name = config.version
      released = new Date()
      vcsTag = config.version
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.14.1'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

repositories {
  mavenCentral()
  maven { url "http://dl.bintray.com/vpx/maven" }
}
dependencies {
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.1',
    'org.codehaus.woodstox:woodstox-core-asl:4.4.1',
    'io.vulpine.lib:http-requests:0.1.1'
}

class Wrap {
  Node u;
  Wrap p;

  Wrap(n) {
    u = n;
  }

  Wrap( Node a, Wrap b ) {
    u = a;
    p = b;
  }

  Wrap m(s, Map v) {
    Node c = u.appendNode(s);
    v.forEach({ k, d -> c.appendNode(k, d) });
    return new Wrap(c, this)
  };

  Wrap n(s, ...l) {
    Node n = u.appendNode(s);
    for (def c : l) n.append(c);
    return new Wrap(n, this)
  };

  Wrap a(a, b) {
    def n = u.appendNode(a, b);
    return new Wrap(n, this)
  };

  Wrap up() { return p }

}

publishing {
  repositories { maven { url "https://api.bintray.com/maven/vpx/maven/${config.name}/;publish=1" } }
  publications {
    maven(MavenPublication) {
      from components.java;
      pom.withXml {
        { Node project ->
          def ghu = "https://github.com/${config.groupKey}/${config.repo}";
          new Wrap(project)
            .a('inceptionYear', '2016').up()
            .m('organization', [ name: 'Vulpine IO', url : 'http://vulpine.io' ]).up()
            .n('developers')
            .m('developer', [ id: 'elliefops', name: 'Elizabeth Harper', email: 'elliefops@gmail.com' ]).up().up()
            .m('issueManagement', [
              system: 'YouTrack',
              url: "http://vulpine.myjetbrains.com/youtrack/issues?q=project%3A+${config.repo}"
            ])
            .up()
            .m('ciManagement', [ system: 'Travis CI', url: "https://travis-ci.org/${config.groupKey}" ]).up()
            .m('scm', [
              connection: "scm:git:${ghu}.git",
              developerConnection: "scm:git:${ghu}.git",
              tag: 'master',
              url: ghu
            ]).up()
            .n('licenses')
            .m('license', [
              name: 'Apache License, Version 2.0',
              url: 'http://www.apache.org/licenses/LICENSE-2.0.txt',
              distribution: 'repo'
            ]);
          return project;
        }.call((Node) asNode())
      }
    }
  }
}
